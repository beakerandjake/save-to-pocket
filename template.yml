AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: API layer for save-to-pocket application

Parameters:
  ConfigStackName:
    Description: The name of the cloudformation stack which exports config settings
    Type: String
    Default: save-to-pocket-config
  ApiVersion:
    Description: The version of the API for consumers
    Type: String
    Default: v1

Globals:
  Function:
    Runtime: nodejs20.x
    Handler: index.handler
    Architectures:
      - x86_64

Resources:
  SaveItemApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: Api Gateway HTTP Api to save items to pocket
      StageName: !Ref ApiVersion
      AccessLogSettings:
        DestinationArn: !GetAtt AccessLogs.Arn
        Format: $context.identity.sourceIp - - [$context.requestTime] "$context.httpMethod $context.routeKey $context.protocol" $context.status $context.responseLength $context.requestId
      Auth:
        DefaultAuthorizer: LambdaAuthorizer
        Authorizers:
          LambdaAuthorizer:
            AuthorizerPayloadFormatVersion: 2.0
            EnableFunctionDefaultPermissions: true
            EnableSimpleResponses: true
            FunctionArn: !GetAtt AuthorizeFunction.Arn
            Identity:
              Headers:
                - Authorization
      DefaultRouteSettings:
        ThrottlingBurstLimit: 1
        ThrottlingRateLimit: 1

  AccessLogs:
    Type: AWS::Logs::LogGroup

  SaveItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/save-item
      Description: Saves an item to Pocket using the Pocket API
      Environment:
        Variables:
          POCKET_ACCESS_TOKEN_PARAM_NAME:
            Fn::ImportValue: !Sub '${ConfigStackName}-AccessToken'
          POCKET_CONSUMER_KEY_PARAM_NAME:
            Fn::ImportValue: !Sub '${ConfigStackName}-ConsumerKey'
      Events:
        PostItem:
          Type: HttpApi
          Properties:
            ApiId: !Ref SaveItemApi
            Method: POST
            Path: /items
      Policies:
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName:
              Fn::ImportValue: !Sub '${ConfigStackName}-AccessToken'
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName:
              Fn::ImportValue: !Sub '${ConfigStackName}-ConsumerKey'

  AuthorizeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/authorize
      Description: Lambda Authorizer for API Gateway

Outputs:
  SaveItemFunction:
    Description: Save Item to Pocket Lambda Function
    Value: !GetAtt SaveItemFunction.Arn
